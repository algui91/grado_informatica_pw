// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Helper to clear inner floats
/// @author Nicolas Gallagher
/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}


// // This is mixin which you will include in parent
// // of columns. It kills default margin of inline-block
// // elements.
// @mixin row () {
//   font-size: 0;
// }
// // This is column mixins.
// @mixin col ($col, $sum, $gap: 1em, $align: top) {
//     width: 90%;
//     display: inline-block;
//     font-size: 16px;
//     padding-left: $gap;
//     padding-right: $gap;
//     margin: 5px 0;
//
//     @include respond-to('medium') {
//       width: percentage($col/$sum) - (percentage($col/$sum) % 10);
//       vertical-align: $align;
//     }
// }

@mixin rounded($radius:4px) {
  border-radius : $radius;
}


@mixin flex-grid-container($flow: null) {
  display: flex;
  flex-flow: #{$flow};
}

@mixin flex-grid-item($arg, $gutter: null, $margin: .2em, $margin-bottom: null) {
  flex-basis: gutter-value($arg, $gutter);
  margin: $margin;
  @if $margin-bottom != null {
    margin-bottom: $margin-bottom;
    &:nth-last-child(-n+#{$arg}) {
      margin-bottom: 0;
    }
  }
}
